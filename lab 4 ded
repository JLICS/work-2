#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int n, m, current;
 int N[100],M[100];
 char **pic[100];

void input(int cur, char *filename)
{
 FILE *F;
 char str[512], Pic[512][512];
 int i, len;
   len=0; m=0;
   F=fopen(filename,"r");
   while (fgets(str,512,F))
   {
     n= strlen(str);
     if (str[n-1]=='\n') n--;
     len = n;
     strncpy(Pic[m], str,n);  
     m++; 
   } 
//  if (pic[cur]) freepic(cur);
  pic[cur]=(char **)malloc(m*sizeof(char *));
  for (i=0; i<m; i++) 
    {
     pic[cur][i]=(char *)malloc(n); 
     strncpy(pic[cur][i],Pic[i],n);
    }
   N[cur]=n;
   M[cur]=m;
  printf("m=%d n=%d\n",m,n);
}

void output(int num)
{
  int n,m,i,j;
  printf(" Picture # %d\n",num);
  m=M[num]; n=N[num];
  for (i=0; i<m; i++)
   {
    for (j=0; j<n; j++)
      putchar(pic[num][i][j]);
    putchar('\n');
   }
 
}

void clean(int i)
{
    int m = M[i], n = N[i];
    for (int j = 0; j < m; j++) {
        for (int k = 0; k < n; k++) {
            pic[i][j][k] = ' ';
        }
    }
}

void inverse(int i)
{
    int m = M[i], n = N[i];
    for (int j = 0; j < m; j++) {
        for (int k = 0; k < n; k++) {
            if (pic[i][j][k] == ' ') {
                pic[i][j][k] = '*';
            } else {
                pic[i][j][k] = ' ';
            }
        }
    }
}

void rotate_r(int i)
{
    int m = M[i], n = N[i];
    char **temp = malloc(n * sizeof(char *));
    for (int j = 0; j < n; j++) {
        temp[j] = malloc(m * sizeof(char));
    }
    for (int j = 0; j < m; j++) {
        for (int k = 0; k < n; k++) {
            temp[k][m - j - 1] = pic[i][j][k];
        }
    }
    for (int j = 0; j < n; j++) {
        for (int k = 0; k < m; k++) {
            pic[i][k][j] = temp[j][k];
        }
    }
    for (int j = 0; j < n; j++) {
        free(temp[j]);
    }
    free(temp);
    int new_n = m, new_m = n;
    N[i] = new_n;
    M[i] = new_m;
}

void rotate_l(int i)
{
    int m = M[i], n = N[i];
    char **temp = malloc(m * sizeof(char *));
    for (int j = 0; j < m; j++) {
        temp[j] = malloc(n * sizeof(char));
    }
    for (int j = 0; j < m; j++) {
        for (int k = 0; k < n; k++) {
            temp[m - j - 1][k] = pic[i][j][k];
        }
    }
    for (int j = 0; j < m; j++) {
        for (int k = 0; k < n; k++) {
            pic[i][k][j] = temp[j][k];
        }
    }
    for (int j = 0; j < m; j++) {
        free(temp[j]);
    }
    free(temp);
    int new_n = m, new_m = n;
    N[i] = new_n;
    M[i] = new_m;
}

void frame(int i, char c)
{
    int m = M[i], n = N[i];
    pic[i][0][0] = c;
    pic[i][m-1][0] = c;
    pic[i][0][n-1] = c;
    pic[i][m-1][n-1] = c;
    for (int j = 1; j < m-1; j++) {
        pic[i][j][0] = c;
        pic[i][j][n-1] = c;
    }
    for (int j = 1; j < n-1; j++) {
        pic[i][0][j] = c;
        pic[i][m-1][j] = c;
    }
}

void dotting(int i)
{
    int m = M[i], n = N[i];
    for (int j = 0; j < m; j++) {
        for (int k = 0; k < n; k++) {
            if (pic[i][j][k] == ')
    }
    }
}

int main(int argc, char *argv[])
{
  FILE *F, *FO;
  int i;
  char filename[256]="pic1.txt";
  char str[512], *f;
   for(i=0; i<100; i++) pic[i]=NULL;
   F=fopen(filename,"r");
   input(0,filename);
   output(0);
   input(1,"pic2.txt");
   output(1);
   output(0);
   input(2,"picB.txt");
   output(2);
   
  fclose(F);
   return 0;
}
 
